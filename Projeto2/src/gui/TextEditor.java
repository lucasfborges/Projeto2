/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import control.Abrir;
import control.Salvar;
import entidade.Actor;
import entidade.UserCase;
import entidade.Modelo;
import java.awt.Color;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.text.*;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Lucas
 */
public class TextEditor extends javax.swing.JFrame {

    MyHighlightPainter m1 = new MyHighlightPainter(Color.green);
    MyHighlightPainter m2 = new MyHighlightPainter(Color.cyan);
    Modelo modelo;
    private Object doc;

    /**
     * Creates new form TextEditor
     */
    public TextEditor() {
        modelo = new Modelo();
        initComponents();

    }

    private void atualizarModelo() {
        modelo.setText(jTextPane1.getText());
    }

    private void atualizarGUI() {
        jTextPane1.setText(modelo.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        gerarDiagrama = new javax.swing.JButton();
        gerarPrototipo = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        adicionarItem = new javax.swing.JButton();
        removerItem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuAbrir = new javax.swing.JMenuItem();
        menuSalvar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jTextPane1);

        gerarDiagrama.setText("Gerar Diagrama");
        gerarDiagrama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerarDiagramaActionPerformed(evt);
            }
        });

        gerarPrototipo.setText("Gerar Prototipo");

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Projeto");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jTree1MouseDragged(evt);
            }
        });
        jScrollPane2.setViewportView(jTree1);

        adicionarItem.setBackground(new java.awt.Color(51, 255, 51));
        adicionarItem.setText(">>");
        adicionarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarItemActionPerformed(evt);
            }
        });

        removerItem.setBackground(new java.awt.Color(255, 0, 0));
        removerItem.setText("X");
        removerItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerItemActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(51, 51, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("√Årvore do Projeto");

        jMenu1.setText("Arquivo");

        menuAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menuAbrir.setText("Abrir...");
        menuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAbrirActionPerformed(evt);
            }
        });
        jMenu1.add(menuAbrir);

        menuSalvar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuSalvar.setText("Salvar");
        menuSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalvarActionPerformed(evt);
            }
        });
        jMenu1.add(menuSalvar);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(gerarDiagrama)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gerarPrototipo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(adicionarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(removerItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gerarDiagrama)
                            .addComponent(gerarPrototipo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(adicionarItem)
                                .addGap(47, 47, 47)
                                .addComponent(removerItem)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gerarDiagramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerarDiagramaActionPerformed
        int begin = jTextPane1.getSelectionStart();
        int end = jTextPane1.getSelectionEnd();
        Highlighter hilite = jTextPane1.getHighlighter();

        Highlighter.Highlight[] hilites = hilite.getHighlights();

        for (int i = 0; i < hilites.length; i++) {

            int e1 = hilites[i].getEndOffset();
            int b1 = hilites[i].getStartOffset();

            MyHighlightPainter myHighlightPainter = (MyHighlightPainter) hilites[i].getPainter();
            Color c = myHighlightPainter.getColor();
            String sub = "";
            if (c.toString().equals(m1.getColor().toString())) {

                try {
                    sub = jTextPane1.getText(b1, (e1 - b1));
                    Actor ac = new Actor(sub);
                    modelo.addActor(ac);
                } catch (BadLocationException ex) {
                    Logger.getLogger(TextEditor.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                try {
                    sub = jTextPane1.getText(b1, (e1 - b1));
                    UserCase uc = new UserCase(sub);
                } catch (BadLocationException ex) {
                    Logger.getLogger(TextEditor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_gerarDiagramaActionPerformed

    private void menuSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalvarActionPerformed
        // TODO add your handling code here:
        atualizarModelo();
        JFileChooser selecionador = new JFileChooser();
        selecionador.showSaveDialog(this);
        File arquivo = selecionador.getSelectedFile();

        if (Salvar.salvar(modelo, arquivo) == Salvar.SUCESSO) {
            JOptionPane.showMessageDialog(null, "SUCESSO");
        } else {
            JOptionPane.showMessageDialog(null, "ERRO");
        }

        /**
         * String texto = jTextPane1.getText();
         *
         * Highlighter hilite = jTextPane1.getHighlighter();
         * Highlighter.Highlight[] hilites = hilite.getHighlights();
         *
         * int i = 0; //int numCor = 0; List<Integer> inicioHighLight = new
         * ArrayList<>(); List<Integer> fimHighLight = new ArrayList<>();
         * List<Integer> corHighLight = new ArrayList<>(); //0 = ator 1 = user
         * case
         *
         * try { while (true) { MyHighlightPainter myHighlightPainter =
         * (MyHighlightPainter) hilites[i].getPainter(); Color c =
         * myHighlightPainter.getColor();
         *
         * if (c.toString().equals(m1.getColor().toString())) {
         * corHighLight.add(0); } else if
         * (c.toString().equals(m2.getColor().toString())) {
         * corHighLight.add(1); }
         * inicioHighLight.add(hilites[i].getStartOffset());
         * fimHighLight.add(hilites[i].getEndOffset()); i = i + 1; } } catch
         * (Exception e) { //Nada a fazer. }
         *
         * File arquivo = new File("PosicaoHighLight.txt"); try (FileWriter fw =
         * new FileWriter(arquivo)) {
         *
         * for (int j = 0; j < i; j++) {
         * //System.out.println("Cor = " + corHighLight.get(j) + " Lenght = " + inicioHighLight.get(j) + " ->
         * " + fimHighLight.get(j)); fw.write(corHighLight.get(j) + " " +
         * inicioHighLight.get(j) + " " + fimHighLight.get(j) + "\n"); }
         * fw.close(); } catch (IOException ex) { }
         *
         * File arquivo2 = new File("Texto.txt"); try (FileWriter fw2 = new
         * FileWriter(arquivo2)) { fw2.write(texto); fw2.close(); } catch
         * (IOException ex) { }
         *
         * System.out.print(inicioHighLight); System.out.print("\n" +
         * fimHighLight);
         *
         * System.out.println(texto);
         */
    }//GEN-LAST:event_menuSalvarActionPerformed

    private void menuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAbrirActionPerformed
        JFileChooser selecionador = new JFileChooser();
        selecionador.showOpenDialog(this);

        if ((modelo = Abrir.abrir(selecionador.getSelectedFile())) != null) {
            System.out.println("" + modelo.getText());

            JOptionPane.showMessageDialog(this, "SUUUUUUUUCESSOO");
        } else {
            JOptionPane.showMessageDialog(this, "erro =(");
        }
        atualizarGUI();
    }//GEN-LAST:event_menuAbrirActionPerformed

    private void jTree1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseDragged

    }//GEN-LAST:event_jTree1MouseDragged

    private void removerItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerItemActionPerformed
        //Remover Ator ou Caso de Uso
        try {
            DefaultTreeModel model = (DefaultTreeModel) jTree1.getModel();
            DefaultMutableTreeNode selectNode = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
            if (selectNode.isRoot()) {
                JOptionPane.showMessageDialog(null, "N√£o √© poss√≠vel remover a raiz do projeto.", "Alerta", JOptionPane.WARNING_MESSAGE);
            } else {
                model.removeNodeFromParent(selectNode);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "N√£o foi poss√≠vel fazer a remove√ß√£o.", "Alerta", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_removerItemActionPerformed

    private void adicionarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarItemActionPerformed
        //Adicionar Ator
        try {
            DefaultTreeModel model = (DefaultTreeModel) jTree1.getModel();
            DefaultMutableTreeNode selectNode = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
            DefaultMutableTreeNode newNode = new DefaultMutableTreeNode(jTextPane1.getSelectedText());
            model.insertNodeInto(newNode, selectNode, 0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Nenhum n√≥ foi selecionado.", "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_adicionarItemActionPerformed

    public void removeHighlights(JTextComponent textComp) {
        Highlighter hilite = textComp.getHighlighter();
        Highlighter.Highlight[] hilites = hilite.getHighlights();
        for (int i = 0; i < hilites.length; i++) {
            if (hilites[i].getPainter() instanceof MyHighlightPainter) {
                hilite.removeHighlight(hilites[i]);
            }
        }
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarItem;
    private javax.swing.JButton gerarDiagrama;
    private javax.swing.JButton gerarPrototipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTree jTree1;
    private javax.swing.JMenuItem menuAbrir;
    private javax.swing.JMenuItem menuSalvar;
    private javax.swing.JButton removerItem;
    // End of variables declaration//GEN-END:variables
}
